/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SPO2SCREENVIEWBASE_HPP
#define SPO2SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/spo2screen_screen/Spo2ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/batteryprogress_container.hpp>

class Spo2ScreenViewBase : public touchgfx::View<Spo2ScreenPresenter>
{
public:
    Spo2ScreenViewBase();
    virtual ~Spo2ScreenViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void changeSpo2Val()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextArea spo2_label;
    touchgfx::TextAreaWithOneWildcard spo2_value;
    touchgfx::Box topright_box;
    touchgfx::Box topleft_box;
    touchgfx::Image catm1_image;
    touchgfx::Button spo2_detail_button;
    batteryprogress_container batteryprogress_container1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SPO2_VALUE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar spo2_valueBuffer[SPO2_VALUE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Spo2ScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SPO2SCREENVIEWBASE_HPP
