/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SPO2DETAILVIEWBASE_HPP
#define SPO2DETAILVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/spo2detail_screen/Spo2DetailPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndOverwrite.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class Spo2DetailViewBase : public touchgfx::View<Spo2DetailPresenter>
{
public:
    Spo2DetailViewBase();
    virtual ~Spo2DetailViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextArea spo2_label;
    touchgfx::Image spo2_image;
    touchgfx::TextAreaWithOneWildcard spo2_value;
    touchgfx::Box topright_image;
    touchgfx::Box topleft_image;
    touchgfx::ImageProgress batteryprogress;
    touchgfx::GraphWrapAndOverwrite<24> spo2_detail_graph;
    touchgfx::GraphElementLine spo2_detail_graphLine1;
    touchgfx::PainterRGB565 spo2_detail_graphLine1Painter;
    touchgfx::Image catm1_image;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SPO2_VALUE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar spo2_valueBuffer[SPO2_VALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SPO2DETAILVIEWBASE_HPP
