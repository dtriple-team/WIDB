/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/TextProvider.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/TypedText.hpp>
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
    va_end(pArg);
    return width;
}

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
    va_end(pArg);
    return width;
}

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
    {
        substituteGlyphs();
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
}

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
    va_list pArg;
    va_start(pArg, format);
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
    va_end(pArg);
}

// Default TypedTextDatabase
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    0xa, 0x45, 0x73, 0x74, 0xe1, 0x73, 0x20, 0x73, 0x65, 0x67, 0x75, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x71, 0x75, 0x65, 0xa, 0x74, 0xfa, 0x20, 0x71, 0x75, 0x69, 0x65, 0x72, 0x6f, 0x20, 0x61, 0x70, 0x61, 0x67, 0x61, 0x72, 0xa, 0xbf, 0x65, 0x73, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x3f, 0x0, // @0 "\nEst?s seguro de que\nt? quiero apagar\n?este dispositivo?"
    0x41, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x75, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0xa, 0x77, 0x61, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x66, 0x66, 0xa, 0x74, 0x68, 0x69, 0x73, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3f, 0x0, // @57 "Are you sure you\nwant to turn off\nthis device?"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x64, 0x65, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x0, // @104 "Informaci?n del dispositivo"
    0x43, 0x61, 0x72, 0x67, 0x61, 0x64, 0x6f, 0x72, 0xa, 0x64, 0x65, 0x73, 0x63, 0x6f, 0x6e, 0x65, 0x63, 0x74, 0x61, 0x64, 0x6f, 0x2e, 0x0, // @132 "Cargador\ndesconectado."
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x62, 0x69, 0x6f, 0x6d, 0xe9, 0x74, 0x72, 0x69, 0x63, 0x61, 0x0, // @155 "Informaci?n biom?trica"
    0x42, 0x72, 0x69, 0x6c, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x6c, 0x61, 0x20, 0x70, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x0, // @178 "Brillo de la pantalla"
    0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0xa, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x0, // @200 "Charger\ndisconnected."
    0x43, 0x69, 0x63, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0xa, 0x63, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x0, // @222 "Ciclo de\ncomunicacion"
    0x43, 0x69, 0x63, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x0, // @244 "Ciclo de comunicacion"
    0x45, 0x6e, 0x63, 0x75, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x20, 0x6d, 0x69, 0x20, 0x74, 0x65, 0x6c, 0xe9, 0x66, 0x6f, 0x6e, 0x6f, 0x0, // @266 "Encuentra mi tel?fono"
    0x43, 0x61, 0x72, 0x67, 0x61, 0x64, 0x6f, 0x72, 0xa, 0x63, 0x6f, 0x6e, 0x65, 0x63, 0x74, 0x61, 0x64, 0x6f, 0x2e, 0x0, // @288 "Cargador\nconectado."
    0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x0, // @308 "Communication\nCycle"
    0x46, 0x72, 0x65, 0x63, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x61, 0xa, 0x63, 0x61, 0x72, 0x64, 0xed, 0x61, 0x63, 0x61, 0x0, // @328 "Frecuencia\ncard?aca"
    0x2, 0xc2dc, 0xac04, 0xa, 0x2, 0xbd84, 0x0, // @348 "<>??\n<>?"
    0x2, 0xc2dc, 0xac04, 0x20, 0x2, 0xbd84, 0x0, // @355 "<>?? <>?"
    0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0xa, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x0, // @362 "Charger\nconnected."
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, // @381 "Configuraci?n WiFi"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x64, 0x65, 0x20, 0x72, 0x65, 0x64, 0x0, // @400 "Informaci?n de red"
    0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, // @419 "configuraci?n WiFi"
    0x6e, 0xfa, 0x6d, 0x65, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x69, 0x6f, 0x0, // @438 "n?mero de servicio"
    0x2, 0x68, 0xa, 0x2, 0x6d, 0x0, // @457 "<>h\n<>m"
    0x2, 0x68, 0x20, 0x2, 0x6d, 0x0, // @463 "<>h <>m"
    0x2, 0xc6d4, 0x20, 0x2, 0xc77c, 0x0, // @469 "<>? <>?"
    0x43, 0x61, 0xed, 0x64, 0x61, 0x73, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x61, 0x64, 0x61, 0x73, 0x0, // @475 "Ca?das detectadas"
    0x4e, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x0, // @493 "No Notificaciones"
    0x50, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x20, 0x61, 0x20, 0x74, 0x69, 0x65, 0x6d, 0x70, 0x6f, 0x0, // @511 "Pantalla a tiempo"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x0, // @529 "Screen brightness"
    0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x57, 0x69, 0x46, 0x69, 0x2e, 0x2e, 0x2e, 0x0, // @547 "Searching WiFi..."
    0x53, 0x6f, 0x6e, 0x69, 0x64, 0x6f, 0x20, 0x79, 0x20, 0x68, 0xe1, 0x70, 0x74, 0x69, 0x63, 0x6f, 0x73, 0x0, // @565 "Sonido y h?pticos"
    0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x20, 0x64, 0x65, 0x6c, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x0, // @583 "nombre del modelo"
    0x42, 0x75, 0x73, 0x63, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x2e, 0x2e, 0x2e, 0x0, // @601 "Buscando WiFi..."
    0x4e, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x0, // @618 "No notifications"
    0x2, 0x2d, 0x2, 0x0, // @635 "<>-<>"
    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x26, 0x20, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x0, // @639 "Sound & Haptics"
    0x6e, 0xfa, 0x6d, 0x65, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x73, 0x65, 0x72, 0x69, 0x65, 0x0, // @655 "n?mero de serie"
    0xc0b0, 0xc18c, 0xd3ec, 0xd654, 0xb3c4, 0x20, 0x2, 0x20, 0x25, 0x0, // @671 "????? <> %"
    0xc2ec, 0xbc15, 0xc218, 0x20, 0x2, 0x20, 0x62, 0x70, 0x6d, 0x0, // @681 "??? <> bpm"
    0xc774, 0x20, 0xae30, 0xae30, 0xb97c, 0xa, 0xc885, 0xb8cc, 0xd558, 0xc2dc, 0xaca0, 0xc2b5, 0xb2c8, 0xae4c, 0x3f, 0x0, // @691 "? ???\n?????????"
    0x42, 0x69, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0, // @707 "Biometric data"
    0x46, 0x61, 0x6c, 0x6c, 0x73, 0x20, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0, // @722 "Falls Detected"
    0x4f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x20, 0x63, 0x61, 0xed, 0x64, 0x61, 0x73, 0x0, // @737 "Ocurren ca?das"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x0, // @752 "Screen on time"
    0x69, 0x64, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @767 "id informaci?n"
    0x69, 0x64, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @782 "id information"
    0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0, // @797 "service number"
    0x2, 0x20, 0x70, 0x61, 0x73, 0x6f, 0x73, 0x0, // @812 "<> pasos"
    0x2, 0x20, 0x73, 0x74, 0x65, 0x70, 0x73, 0x0, // @820 "<> steps"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @828 "Configuraci?n"
    0x46, 0x69, 0x6e, 0x64, 0x20, 0x6d, 0x79, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x0, // @842 "Find my phone"
    0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0, // @856 "serial number"
    0xcda9, 0xc804, 0xae30, 0xac00, 0xa, 0xc5f0, 0xacb0, 0xb418, 0xc5c8, 0xc2b5, 0xb2c8, 0xb2e4, 0x2e, 0x0, // @870 "????\n???????."
    0xcda9, 0xc804, 0xae30, 0xac00, 0xa, 0xd574, 0xc81c, 0xb418, 0xc5c8, 0xc2b5, 0xb2c8, 0xb2e4, 0x2e, 0x0, // @884 "????\n???????."
    0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @898 "Network Info"
    0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @911 "Notificaci?n"
    0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @924 "Notification"
    0x57, 0x69, 0x46, 0x69, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x41, 0x44, 0x44, 0x0, // @937 "WiFi MAC ADD"
    0x57, 0x69, 0x46, 0x69, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0, // @950 "WiFi setting"
    0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x0, // @963 "version info"
    0x76, 0x65, 0x72, 0x73, 0x69, 0xf3, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x0, // @976 "versi?n info"
    0x42, 0x4c, 0x45, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x41, 0x44, 0x44, 0x0, // @989 "BLE MAC ADD"
    0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @1001 "Device Info"
    0x46, 0x61, 0x6c, 0x6c, 0x73, 0x20, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x0, // @1013 "Falls occur"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @1025 "Informaci?n"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1037 "Information"
    0x2, 0x20, 0xac78, 0xc74c, 0x0, // @1049 "<> ??"
    0x2, 0x62, 0x70, 0x6d, 0x0, // @1054 "<>bpm"
    0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0, // @1059 "model name"
    0x27, 0x20, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, // @1070 "' "      "
    0x48, 0x65, 0x61, 0x72, 0x74, 0x72, 0x61, 0x74, 0x65, 0x0, // @1080 "Heartrate"
    0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0, // @1090 "Power off"
    0x52, 0x65, 0x69, 0x6e, 0x69, 0x63, 0x69, 0x61, 0x72, 0x0, // @1100 "Reiniciar"
    0x28, 0x20, 0x29, 0x20, 0x7c, 0x20, 0x20, 0x20, 0x0, // @1110 "( ) |   "
    0x2, 0x73, 0x0, // @1119 "<>s"
    0x2, 0xcd08, 0x0, // @1122 "<>?"
    0x48, 0xe1, 0x70, 0x74, 0x69, 0x63, 0x6f, 0x73, 0x0, // @1125 "H?pticos"
    0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x0, // @1134 "Language"
    0x50, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x0, // @1143 "Pantalla"
    0xb0b4, 0x20, 0xd734, 0xb300, 0xd3f0, 0x20, 0xcc3e, 0xae30, 0x0, // @1152 "? ??? ??"
    0xd1b5, 0xc2e0, 0x20, 0xc8fc, 0xae30, 0x20, 0xc124, 0xc815, 0x0, // @1161 "?? ?? ??"
    0xd654, 0xba74, 0x20, 0xaebc, 0xc9d0, 0x20, 0xc2dc, 0xac04, 0x0, // @1170 "?? ?? ??"
    0xd654, 0xba74, 0x20, 0xbc1d, 0xae30, 0x20, 0xc870, 0xc808, 0x0, // @1179 "?? ?? ??"
    0x41, 0x70, 0x61, 0x67, 0x61, 0x64, 0x6f, 0x0, // @1188 "Apagado"
    0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x0, // @1196 "English"
    0x45, 0x73, 0x70, 0x61, 0xf1, 0x6f, 0x6c, 0x0, // @1204 "Espa?ol"
    0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0, // @1212 "Setting"
    0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x0, // @1220 "Sistema"
    0x57, 0x69, 0x46, 0x69, 0x20, 0xac80, 0xc0c9, 0x0, // @1228 "WiFi ??"
    0x57, 0x69, 0x46, 0x69, 0x20, 0xc124, 0xc815, 0x0, // @1236 "WiFi ??"
    0xb124, 0xd2b8, 0xc6cc, 0xd06c, 0x20, 0xc815, 0xbcf4, 0x0, // @1244 "???? ??"
    0xc18c, 0xb9ac, 0x20, 0xbc0f, 0x20, 0xc9c4, 0xb3d9, 0x0, // @1252 "?? ? ??"
    0x44, 0x6f, 0x72, 0x6d, 0x69, 0x72, 0x0, // @1260 "Dormir"
    0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x0, // @1267 "Haptic"
    0x49, 0x64, 0x69, 0x6f, 0x6d, 0x61, 0x0, // @1274 "Idioma"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x0, // @1281 "Screen"
    0x53, 0x6f, 0x6e, 0x69, 0x64, 0x6f, 0x0, // @1288 "Sonido"
    0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x0, // @1295 "System"
    0x7b, 0x20, 0x7d, 0x5b, 0x20, 0x5d, 0x0, // @1302 "{ }[ ]"
    0xc11c, 0xbe44, 0xc2a4, 0x20, 0xbc88, 0xd638, 0x0, // @1309 "??? ??"
    0xc2dc, 0xb9ac, 0xc5bc, 0x20, 0xbc88, 0xd638, 0x0, // @1316 "??? ??"
    0x25, 0x20, 0x60, 0x20, 0x2f, 0x0, // @1323 "% ` /"
    0x2e, 0x20, 0x2c, 0x3f, 0x21, 0x0, // @1329 ". ,?!"
    0x3a, 0x20, 0x3b, 0x20, 0x5e, 0x0, // @1335 ": ; ^"
    0x40, 0x20, 0x23, 0x20, 0x24, 0x0, // @1341 "@ # $"
    0x48, 0x65, 0x63, 0x68, 0x6f, 0x0, // @1347 "Hecho"
    0x49, 0x43, 0x43, 0x49, 0x44, 0x0, // @1353 "ICCID"
    0x50, 0x61, 0x73, 0x6f, 0x73, 0x0, // @1359 "Pasos"
    0x52, 0x65, 0x73, 0x65, 0x74, 0x0, // @1365 "Reset"
    0x53, 0x6c, 0x65, 0x65, 0x70, 0x0, // @1371 "Sleep"
    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x0, // @1377 "Sound"
    0x53, 0x74, 0x65, 0x70, 0x73, 0x0, // @1383 "Steps"
    0x61, 0x2f, 0x31, 0x2f, 0x21, 0x0, // @1389 "a/1/!"
    0xae30, 0xae30, 0x20, 0xc815, 0xbcf4, 0x0, // @1395 "?? ??"
    0xb099, 0xc0c1, 0x20, 0xac10, 0xc9c0, 0x0, // @1401 "?? ??"
    0xb099, 0xc0c1, 0x20, 0xbc1c, 0xc0dd, 0x0, // @1407 "?? ??"
    0xbc84, 0xc804, 0x20, 0xc815, 0xbcf4, 0x0, // @1413 "?? ??"
    0xc0b0, 0xc18c, 0xd3ec, 0xd654, 0xb3c4, 0x0, // @1419 "?????"
    0xc0dd, 0xccb4, 0x20, 0xc815, 0xbcf4, 0x0, // @1425 "?? ??"
    0xc2dd, 0xbcc4, 0x20, 0xc815, 0xbcf4, 0x0, // @1431 "?? ??"
    0xc54c, 0xb9bc, 0x20, 0xc5c6, 0xc74c, 0x0, // @1437 "?? ??"
    0xc804, 0xc6d0, 0x20, 0xb044, 0xae30, 0x0, // @1443 "?? ??"
    0xd1b5, 0xc2e0, 0x20, 0xc8fc, 0xae30, 0x0, // @1449 "?? ??"
    0x26, 0x2a, 0x20, 0x5f, 0x0, // @1455 "&* _"
    0x30, 0x30, 0x30, 0x30, 0x0, // @1460 "0000"
    0x44, 0x6f, 0x6e, 0x65, 0x0, // @1465 "Done"
    0x49, 0x4d, 0x45, 0x49, 0x0, // @1470 "IMEI"
    0x53, 0x70, 0x6f, 0x32, 0x0, // @1475 "Spo2"
    0x7e, 0x3d, 0x2d, 0x2b, 0x0, // @1480 "~=-+"
    0xac78, 0xc74c, 0x20, 0xc218, 0x0, // @1485 "?? ?"
    0x59, 0x65, 0x73, 0x0, // @1490 "Yes"
    0x61, 0x62, 0x63, 0x0, // @1494 "abc"
    0x64, 0x65, 0x66, 0x0, // @1498 "def"
    0x67, 0x68, 0x69, 0x0, // @1502 "ghi"
    0x6a, 0x6b, 0x6c, 0x0, // @1506 "jkl"
    0x6d, 0x6e, 0x6f, 0x0, // @1510 "mno"
    0x70, 0x71, 0x72, 0x0, // @1514 "pqr"
    0x73, 0x74, 0x75, 0x0, // @1518 "stu"
    0x76, 0x77, 0x78, 0x0, // @1522 "vwx"
    0xbaa8, 0xb378, 0xba85, 0x0, // @1526 "???"
    0xc2dc, 0xc2a4, 0xd15c, 0x0, // @1530 "???"
    0xc2ec, 0xbc15, 0xc218, 0x0, // @1534 "???"
    0xcd08, 0xae30, 0xd654, 0x0, // @1538 "???"
    0xd55c, 0xad6d, 0xc5b4, 0x0, // @1542 "???"
    0x31, 0x32, 0x0, // @1546 "12"
    0x4e, 0x6f, 0x0, // @1549 "No"
    0x53, 0xed, 0x0, // @1552 "S?"
    0x79, 0x7a, 0x0, // @1555 "yz"
    0xc18c, 0xb9ac, 0x0, // @1558 "??"
    0xc218, 0xba74, 0x0, // @1561 "??"
    0xc54c, 0xb9bc, 0x0, // @1564 "??"
    0xc5b8, 0xc5b4, 0x0, // @1567 "??"
    0xc644, 0xb8cc, 0x0, // @1570 "??"
    0xc885, 0xb8cc, 0x0, // @1573 "??"
    0xcde8, 0xc18c, 0x0, // @1576 "??"
    0xd654, 0xba74, 0x0, // @1579 "??"
    0x31, 0x0, // @1582 "1"
    0x33, 0x0, // @1584 "3"
    0x34, 0x0, // @1586 "4"
    0x35, 0x0, // @1588 "5"
    0x36, 0x0, // @1590 "6"
    0x37, 0x0, // @1592 "7"
    0x38, 0x0, // @1594 "8"
    0x39, 0x0 // @1596 "9"
};

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesKorean[] TEXT_LOCATION_FLASH_ATTRIBUTE;

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesSpanish[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[3] = { 0 };

// Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] = {
    indicesGb,
    indicesKorean,
    indicesSpanish
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 3)
    {
        if (languagesArray[id] != 0)
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}
