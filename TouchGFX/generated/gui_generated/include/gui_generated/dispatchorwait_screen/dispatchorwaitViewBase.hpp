/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DISPATCHORWAITVIEWBASE_HPP
#define DISPATCHORWAITVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dispatchorwait_screen/dispatchorwaitPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class dispatchorwaitViewBase : public touchgfx::View<dispatchorwaitPresenter>
{
public:
    dispatchorwaitViewBase();
    virtual ~dispatchorwaitViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextAreaWithOneWildcard typeofdisaster;
    touchgfx::ImageProgress batteryprogress;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::Button button1;
    touchgfx::Button button2;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TYPEOFDISASTER_SIZE = 10;
    touchgfx::Unicode::UnicodeChar typeofdisasterBuffer[TYPEOFDISASTER_SIZE];

private:

};

#endif // DISPATCHORWAITVIEWBASE_HPP
