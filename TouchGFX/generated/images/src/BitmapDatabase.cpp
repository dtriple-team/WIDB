// 4.23.2 0xa760ab22
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_gps_connected[]; // BITMAP_GPS_CONNECTED_ID = 0, Size: 15x15 pixels
extern const unsigned char image_gps_notconnected[]; // BITMAP_GPS_NOTCONNECTED_ID = 1, Size: 15x15 pixels
extern const unsigned char image_group_3[]; // BITMAP_GROUP_3_ID = 2, Size: 33x15 pixels
extern const unsigned char image_group_6[]; // BITMAP_GROUP_6_ID = 3, Size: 33x15 pixels
extern const unsigned char image_lte[]; // BITMAP_LTE_ID = 4, Size: 15x12 pixels
extern const unsigned char image_lte_connected[]; // BITMAP_LTE_CONNECTED_ID = 5, Size: 15x12 pixels
extern const unsigned char image_lte_notconnected[]; // BITMAP_LTE_NOTCONNECTED_ID = 6, Size: 15x12 pixels
extern const unsigned char image_lte_notconnected_extra_data[];

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_gps_connected, 0, 15, 15, 11, 5, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_gps_notconnected, 0, 15, 15, 11, 5, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_group_3, 0, 33, 15, 4, 0, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_group_6, 0, 33, 15, 2, 1, 27, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_lte, 0, 15, 12, 0, 0, 15, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 12, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_lte_connected, 0, 15, 12, 0, 0, 15, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 12, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_lte_notconnected, image_lte_notconnected_extra_data, 15, 12, 0, 0, 15, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 12, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
