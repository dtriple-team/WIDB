// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_Pretendard_Regular_20_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   5,   0,   0, 0x00 }, // space
    {     0, 0x002D,   7,   2,   7,   1,   9,   0,  14, 0x00 }, // hyphen
    {     8, 0x0030,  10,  14,  14,   1,  12,   0,   0, 0x00 }, // zero
    {    78, 0x0031,   6,  14,  14,   1,   9,  14,   5, 0x00 }, // one
    {   120, 0x0032,  10,  14,  14,   1,  12,  19,   1, 0x00 }, // two
    {   190, 0x0033,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // three
    {   274, 0x0034,  11,  14,  14,   1,  12,  20,   7, 0x00 }, // four
    {   358, 0x0035,  10,  14,  14,   1,  12,   0,   0, 0x00 }, // five
    {   428, 0x0036,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // six
    {   512, 0x0037,  11,  14,  14,   0,  11,   0,   0, 0x00 }, // seven
    {   596, 0x0038,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // eight
    {   680, 0x0039,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // nine
    {   764, 0x003F,   9,  14,  14,   0,  10,   0,   0, 0x00 }, // question
    {   834, 0x0041,  13,  14,  14,   0,  13,  27,  20, 0x00 }, // A
    {   932, 0x0042,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // B
    {  1016, 0x0043,  12,  14,  14,   1,  14,  47,   7, 0x00 }, // C
    {  1100, 0x0044,  12,  14,  14,   1,  14,   0,   0, 0x00 }, // D
    {  1184, 0x0045,  10,  14,  14,   1,  11,   0,   0, 0x00 }, // E
    {  1254, 0x0046,  10,  14,  14,   1,  11,   0,   0, 0x00 }, // F
    {  1324, 0x0047,  13,  14,  14,   1,  14,  54,   7, 0x00 }, // G
    {  1422, 0x0048,  12,  14,  14,   1,  14,   0,   0, 0x00 }, // H
    {  1506, 0x0049,   3,  14,  14,   1,   5,   0,   0, 0x00 }, // I
    {  1534, 0x004A,   9,  14,  14,   0,  10,  61,  12, 0x00 }, // J
    {  1604, 0x004B,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // K
    {  1688, 0x004C,   9,  14,  14,   1,  11,   0,   0, 0x00 }, // L
    {  1758, 0x004D,  15,  14,  14,   1,  17,   0,   0, 0x00 }, // M
    {  1870, 0x004E,  12,  14,  14,   1,  14,   0,   0, 0x00 }, // N
    {  1954, 0x004F,  13,  14,  14,   1,  15,  73,   7, 0x00 }, // O
    {  2052, 0x0050,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // P
    {  2136, 0x0051,  13,  15,  14,   1,  15,  80,   7, 0x00 }, // Q
    {  2241, 0x0052,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // R
    {  2325, 0x0053,  11,  14,  14,   1,  12,   0,   0, 0x00 }, // S
    {  2409, 0x0054,  12,  14,  14,   0,  12,  87,  27, 0x00 }, // T
    {  2493, 0x0055,  12,  14,  14,   1,  14,   0,   0, 0x00 }, // U
    {  2577, 0x0056,  13,  14,  14,   0,  13, 114,  15, 0x00 }, // V
    {  2675, 0x0057,  18,  14,  14,   0,  18, 129,  11, 0x00 }, // W
    {  2801, 0x0058,  12,  14,  14,   0,  12, 140,   4, 0x00 }, // X
    {  2885, 0x0059,  13,  14,  14,   0,  13, 144,  19, 0x00 }, // Y
    {  2983, 0x005A,  10,  14,  14,   1,  12, 163,   2, 0x00 }, // Z
    {  3053, 0x0061,  10,  11,  11,   0,  11, 165,   5, 0x00 }, // a
    {  3108, 0x0062,  10,  14,  14,   1,  12,   0,   0, 0x00 }, // b
    {  3178, 0x0063,  10,  11,  11,   0,  11, 170,   8, 0x00 }, // c
    {  3233, 0x0064,  11,  14,  14,   0,  12, 178,   8, 0x00 }, // d
    {  3317, 0x0065,  11,  11,  11,   0,  11, 186,   8, 0x00 }, // e
    {  3383, 0x0066,   7,  14,  14,   0,   7, 194,   1, 0x00 }, // f
    {  3439, 0x0067,  11,  15,  11,   0,  12, 195,   8, 0x00 }, // g
    {  3529, 0x0068,   9,  14,  14,   1,  11,   0,   0, 0x00 }, // h
    {  3599, 0x0069,   3,  14,  14,   1,   4, 203,   2, 0x00 }, // i
    {  3627, 0x006A,   5,  18,  14,  -1,   4, 205,   1, 0x00 }, // j
    {  3681, 0x006B,   9,  14,  14,   1,  10,   0,   0, 0x00 }, // k
    {  3751, 0x006C,   2,  14,  14,   1,   4,   0,   0, 0x00 }, // l
    {  3765, 0x006D,  15,  11,  11,   1,  17, 206,   3, 0x00 }, // m
    {  3853, 0x006E,   9,  11,  11,   1,  11, 209,   3, 0x00 }, // n
    {  3908, 0x006F,  11,  11,  11,   0,  11, 212,   8, 0x00 }, // o
    {  3974, 0x0070,  10,  15,  11,   1,  12, 220,   3, 0x00 }, // p
    {  4049, 0x0071,  11,  15,  11,   0,  12, 223,   8, 0x00 }, // q
    {  4139, 0x0072,   6,  12,  12,   1,   7, 231,   3, 0x00 }, // r
    {  4175, 0x0073,   8,  11,  11,   1,  10, 234,   5, 0x00 }, // s
    {  4219, 0x0074,   7,  14,  14,   0,   7, 239,   1, 0x00 }, // t
    {  4275, 0x0075,   9,  11,  11,   1,  11, 240,   4, 0x00 }, // u
    {  4330, 0x0076,  10,  11,  11,   0,  11, 244,   4, 0x00 }, // v
    {  4385, 0x0077,  15,  11,  11,   0,  16, 248,   2, 0x00 }, // w
    {  4473, 0x0078,  10,  11,  11,   0,  10, 250,   1, 0x00 }, // x
    {  4528, 0x0079,  10,  15,  11,   0,  11, 251,   4, 0x00 }, // y
    {  4603, 0x007A,   9,  11,  11,   1,  10, 255,   2, 0x00 }, // z
    {     0, 0xC6D4,  16,  18,  16,   0,  17,   0,   0, 0x00 }, // uniC6D4
    {   144, 0xC77C,  15,  18,  16,   1,  17,   0,   0, 0x00 }  // uniC77C
};

// Pretendard_Regular_20_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_Pretendard_Regular_20_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_Pretendard_Regular_20_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_Pretendard_Regular_20_4bpp_24[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_Pretendard_Regular_20_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_Pretendard_Regular_20_4bpp_0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    unicodes_Pretendard_Regular_20_4bpp_24
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_Pretendard_Regular_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Pretendard_Regular_20_4bpp();

touchgfx::GeneratedFont& getFont_Pretendard_Regular_20_4bpp()
{
    static touchgfx::GeneratedFont Pretendard_Regular_20_4bpp(glyphs_Pretendard_Regular_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 0, unicodes_Pretendard_Regular_20_4bpp, kerning_Pretendard_Regular_20_4bpp, 63, 0, 0, 0);
    return Pretendard_Regular_20_4bpp;
}
